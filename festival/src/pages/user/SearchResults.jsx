import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
import './SearchResults.css';

const SearchResults = ({ articles, searchTerm }) => {
    const location = useLocation();
    const [results, setResults] = useState([]);
    const [currentSearchTerm, setCurrentSearchTerm] = useState('');

    // Function to get first image from article
    const getFirstImage = (imageData) => {
        if (Array.isArray(imageData) && imageData.length > 0) {
            return imageData[0];
        }
        if (typeof imageData === 'string' && imageData) {
            return imageData;
        }
        return '/placeholder.jpg';
    };

    useEffect(() => {
        const queryParams = new URLSearchParams(location.search);
        const query = queryParams.get('q') || searchTerm;
        setCurrentSearchTerm(query);

        if (query && query.trim()) {
            const searchResults = articles.filter(article => {
                const searchText = query.toLowerCase();
                return (
                    article.title.toLowerCase().includes(searchText) ||
                    article.excerpt.toLowerCase().includes(searchText) ||
                    article.content.toLowerCase().includes(searchText) ||
                    article.location.toLowerCase().includes(searchText) ||
                    article.tags.some(tag => tag.toLowerCase().includes(searchText))
                );
            });
            setResults(searchResults);
        } else {
            setResults([]);
        }
    }, [location.search, searchTerm, articles]);

    return (
        <div className="search-results-container">
            <div className="search-results-main">
                <div className="search-results-header">
                    <h1 className="search-results-title">üîç K·∫øt qu·∫£ t√¨m ki·∫øm</h1>
                    {currentSearchTerm && (
                        <p className="search-results-query">
                            T√¨m ki·∫øm cho: <strong>"{currentSearchTerm}"</strong>
                        </p>
                    )}
                    <p className="search-results-count">
                        T√¨m th·∫•y <strong>{results.length}</strong> k·∫øt qu·∫£
                    </p>
                </div>

                {!currentSearchTerm ? (
                    <div className="search-results-empty">
                        <h3>Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm</h3>
                        <p>S·ª≠ d·ª•ng thanh t√¨m ki·∫øm ·ªü tr√™n ƒë·ªÉ t√¨m c√°c l·ªÖ h·ªôi v√† s·ª± ki·ªán Khmer</p>
                        <Link to="/" className="search-results-back-link">‚Üê V·ªÅ trang ch·ªß</Link>
                    </div>
                ) : results.length === 0 ? (
                    <div className="search-results-empty">
                        <h3>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ n√†o</h3>
                        <p>Kh√¥ng c√≥ b√†i vi·∫øt n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a "{currentSearchTerm}"</p>
                        <div className="search-results-suggestions">
                            <p><strong>G·ª£i √Ω t√¨m ki·∫øm:</strong></p>
                            <ul>
                                <li>‚Ä¢ Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a ng·∫Øn g·ªçn h∆°n</li>
                                <li>‚Ä¢ S·ª≠ d·ª•ng t·ª´ kh√≥a ti·∫øng Vi·ªát: "chol chnam thmay", "ok om bok"</li>
                                <li>‚Ä¢ T√¨m theo danh m·ª•c: "l·ªÖ h·ªôi truy·ªÅn th·ªëng", "l·ªÖ h·ªôi m√πa v·ª•"</li>
                                <li>‚Ä¢ T√¨m theo ƒë·ªãa ƒëi·ªÉm: "Tr√† Vinh", "S√≥c TrƒÉng", "An Giang"</li>
                            </ul>
                        </div>
                        <Link to="/" className="search-results-back-link">‚Üê V·ªÅ trang ch·ªß</Link>
                    </div>
                ) : (
                    <div className="search-results-list">
                        {results.map(article => (
                            <article key={article.id} className="search-results-card">
                                <div className="search-results-card-content">
                                    <img
                                        src={getFirstImage(article.image)}
                                        alt={article.title}
                                        className="search-results-image"
                                        onError={(e) => {
                                            e.target.src = '/placeholder.jpg';
                                        }}
                                    />
                                    <div className="search-results-info">
                                        <div className="search-results-article-header">
                                            <h3 className="search-results-article-title">{article.title}</h3>
                                        </div>

                                        <p className="search-results-location">üó∫Ô∏è {article.location}</p>
                                        <p className="search-results-excerpt">{article.excerpt}</p>

                                        {/* Highlight matching tags */}
                                        {article.tags.filter(tag =>
                                            tag.toLowerCase().includes(currentSearchTerm.toLowerCase())
                                        ).length > 0 && (
                                                <div className="search-results-tags">
                                                    {article.tags
                                                        .filter(tag => tag.toLowerCase().includes(currentSearchTerm.toLowerCase()))
                                                        .map(tag => (
                                                            <span key={tag} className="search-results-tag">
                                                                #{tag}
                                                            </span>
                                                        ))}
                                                </div>
                                            )}

                                        <div className="search-results-article-footer">
                                            <div className="search-results-meta">
                                                <span>üëÅÔ∏è {article.views.toLocaleString('vi-VN')} l∆∞·ª£t xem</span>
                                                <span>üìÖ {new Date(article.date).toLocaleDateString('vi-VN')}</span>
                                            </div>
                                            <Link to={`/article/${article.id}`} className="search-results-view-btn">
                                                Xem chi ti·∫øt ‚Üí
                                            </Link>
                                        </div>
                                    </div>
                                </div>
                            </article>
                        ))}
                    </div>
                )}

                {/* Quick Links */}
                <div className="search-results-quick">
                    <h3>üéØ T√¨m ki·∫øm nhanh</h3>
                    <div className="search-results-quick-links">
                        <Link to="/search?q=chol chnam thmay" className="search-results-quick-link">
                            Chol Chnam Thmay
                        </Link>
                        <Link to="/search?q=ok om bok" className="search-results-quick-link">
                            Ok Om Bok
                        </Link>
                        <Link to="/search?q=pchum ben" className="search-results-quick-link">
                            Pchum Ben
                        </Link>
                        <Link to="/search?q=l·ªÖ h·ªôi truy·ªÅn th·ªëng" className="search-results-quick-link">
                            L·ªÖ h·ªôi truy·ªÅn th·ªëng
                        </Link>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default SearchResults; 